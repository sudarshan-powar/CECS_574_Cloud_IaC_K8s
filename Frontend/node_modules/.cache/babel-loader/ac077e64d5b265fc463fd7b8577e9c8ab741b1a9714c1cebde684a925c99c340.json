{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      category: null,\n      categoryId: null // New data property for categoryId\n    };\n  },\n\n  props: [\"baseURL\", \"categories\"],\n  methods: {\n    async editCategory() {\n      // Clone the category to avoid direct mutation\n      const categoryToUpdate = {\n        ...this.category\n      };\n      delete categoryToUpdate[\"products\"];\n      await axios.post(this.baseURL + \"category/update/\" + this.categoryId, categoryToUpdate).then(() => {\n        // Removed the 'res' variable\n        // Sending the event to parent to handle\n        this.$emit(\"fetchData\");\n        this.$router.push({\n          name: 'AdminCategory'\n        });\n        swal({\n          text: \"Category Updated Successfully!\",\n          icon: \"success\",\n          closeOnClickOutside: false\n        });\n      }).catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push({\n        name: 'Signin'\n      });\n      return;\n    }\n    this.categoryId = this.$route.params.id; // Use the new data property\n    this.category = this.categories.find(category => category.id == this.categoryId);\n    console.log('category', this.category);\n  }\n};","map":{"version":3,"names":["axios","swal","data","category","categoryId","props","methods","editCategory","categoryToUpdate","post","baseURL","then","$emit","$router","push","name","text","icon","closeOnClickOutside","catch","err","console","log","mounted","localStorage","getItem","$route","params","id","categories","find"],"sources":["/Users/sudarshanpowar/Desktop/Personal/project2/Ecomm-UI/ecommerce-vuejs/src/views/Category/EditCategory.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <h4 class=\"pt-3\">Edit Category</h4>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-3\"></div>\r\n      <div class=\"col-md-6 px-5 px-md-0\">\r\n        <form v-if=\"category\">\r\n          <div class=\"form-group\">\r\n            <label>Category Name</label>\r\n            <input type=\"text\" class=\"form-control\" v-model=\"category.categoryName\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Description</label>\r\n            <input type=\"text\" class=\"form-control\" v-model=\"category.description\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>ImageURL</label>\r\n            <input type=\"url\" class=\"form-control\" v-model=\"category.imageUrl\" required>\r\n          </div>\r\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"editCategory\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-3\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; \r\nimport swal from 'sweetalert2';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      category: null,\r\n      categoryId: null // New data property for categoryId\r\n    }\r\n  },\r\n  props: [\"baseURL\", \"categories\"],\r\n  methods: {\r\n    async editCategory() {\r\n      // Clone the category to avoid direct mutation\r\n      const categoryToUpdate = { ...this.category };\r\n      delete categoryToUpdate[\"products\"];\r\n\r\n      await axios.post(this.baseURL + \"category/update/\" + this.categoryId, categoryToUpdate)\r\n      .then(() => { // Removed the 'res' variable\r\n        // Sending the event to parent to handle\r\n        this.$emit(\"fetchData\");\r\n        this.$router.push({ name: 'AdminCategory' });\r\n        swal({\r\n          text: \"Category Updated Successfully!\",\r\n          icon: \"success\",\r\n          closeOnClickOutside: false,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!localStorage.getItem('token')) {\r\n      this.$router.push({ name: 'Signin' });\r\n      return;\r\n    }\r\n    this.categoryId = this.$route.params.id; // Use the new data property\r\n    this.category = this.categories.find(category => category.id == this.categoryId);\r\n    console.log('category', this.category);\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\nh4 {\r\n  font-family: 'Roboto', sans-serif;\r\n  color: #484848;\r\n  font-weight: 700;\r\n}\r\n</style>\r\n"],"mappings":";AAiCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAG,CAAE;IACnB;EACF,CAAC;;EACDC,KAAK,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EAChCC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB;MACA,MAAMC,gBAAe,GAAI;QAAE,GAAG,IAAI,CAACL;MAAS,CAAC;MAC7C,OAAOK,gBAAgB,CAAC,UAAU,CAAC;MAEnC,MAAMR,KAAK,CAACS,IAAI,CAAC,IAAI,CAACC,OAAM,GAAI,kBAAiB,GAAI,IAAI,CAACN,UAAU,EAAEI,gBAAgB,EACrFG,IAAI,CAAC,MAAM;QAAE;QACZ;QACA,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC;QACvB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAgB,CAAC,CAAC;QAC5Cd,IAAI,CAAC;UACHe,IAAI,EAAE,gCAAgC;UACtCC,IAAI,EAAE,SAAS;UACfC,mBAAmB,EAAE;QACvB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAClC,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC,CAAC;MACrC;IACF;IACA,IAAI,CAACX,UAAS,GAAI,IAAI,CAACsB,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;IACzC,IAAI,CAACzB,QAAO,GAAI,IAAI,CAAC0B,UAAU,CAACC,IAAI,CAAC3B,QAAO,IAAKA,QAAQ,CAACyB,EAAC,IAAK,IAAI,CAACxB,UAAU,CAAC;IAChFiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACnB,QAAQ,CAAC;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}