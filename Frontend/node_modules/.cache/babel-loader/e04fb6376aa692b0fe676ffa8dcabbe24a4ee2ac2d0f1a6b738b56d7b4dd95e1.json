{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      selectedFile: null\n    };\n  },\n  props: [\"baseURL\"],\n  methods: {\n    onFileSelected(event) {\n      // This will always update the selected file whenever the user changes files\n      this.selectedFile = event.target.files[0];\n    },\n    async onUpload() {\n      if (!this.selectedFile) {\n        swal({\n          text: \"Select a file first\",\n          icon: \"warning\",\n          closeOnClickOutside: false\n        });\n        return;\n      }\n      if (this.selectedFile.type !== \"image/jpeg\" && this.selectedFile.type !== \"image/png\" && this.selectedFile.type !== \"image/jpg\") {\n        // File format is not correct\n        swal({\n          text: \"Select an image/jpeg file!\",\n          icon: \"error\",\n          closeOnClickOutside: false\n        });\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      await axios({\n        method: 'post',\n        url: this.baseURL + \"fileUpload/\",\n        data: formData\n      }).then(() => {\n        // Removed the '_' variable\n        this.$router.push({\n          name: \"Gallery\"\n        });\n        swal({\n          text: \"Image Added Successfully!\",\n          icon: \"success\",\n          closeOnClickOutside: false\n        });\n      }).catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push({\n        name: 'Signin'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","data","selectedFile","props","methods","onFileSelected","event","target","files","onUpload","text","icon","closeOnClickOutside","type","formData","FormData","append","method","url","baseURL","then","$router","push","name","catch","err","console","log","mounted","localStorage","getItem"],"sources":["/Users/sudarshanpowar/Desktop/Personal/project2/Ecomm-UI/ecommerce-vuejs/src/views/Admin/AddImage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <h4 class=\"pt-3\">Add a new Image</h4>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-3\"></div>\r\n      <div class=\"col-md-6 px-5 px-md-0 pt-5\">\r\n        <div class=\"form-group\">\r\n          <label for=\"myfile\">Select image :</label>\r\n          <input type=\"file\" id=\"myfile\" class=\"form-control-file\" @change=\"onFileSelected\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-info\" @click=\"onUpload\">Upload</button>\r\n      </div>\r\n      <div class=\"col-3\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; \r\nimport swal from 'sweetalert2';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFile: null\r\n    }\r\n  },\r\n  props: [\"baseURL\"],\r\n  methods: {\r\n    onFileSelected(event) {\r\n      // This will always update the selected file whenever the user changes files\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async onUpload() {\r\n      if (!this.selectedFile) {\r\n        swal({\r\n          text: \"Select a file first\",\r\n          icon: \"warning\",\r\n          closeOnClickOutside: false,\r\n        });\r\n        return;\r\n      }\r\n      if (this.selectedFile.type !== \"image/jpeg\" && this.selectedFile.type !== \"image/png\" && this.selectedFile.type !== \"image/jpg\") {\r\n        // File format is not correct\r\n        swal({\r\n          text: \"Select an image/jpeg file!\",\r\n          icon: \"error\",\r\n          closeOnClickOutside: false,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.selectedFile);\r\n\r\n      await axios({\r\n        method: 'post',\r\n        url: this.baseURL + \"fileUpload/\",\r\n        data: formData,\r\n      })\r\n      .then(() => { // Removed the '_' variable\r\n        this.$router.push({ name: \"Gallery\" });\r\n        swal({\r\n          text: \"Image Added Successfully!\",\r\n          icon: \"success\",\r\n          closeOnClickOutside: false,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!localStorage.getItem('token')) {\r\n      this.$router.push({ name: 'Signin' });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\nh4 {\r\n  font-family: 'Roboto', sans-serif;\r\n  color: #484848;\r\n  font-weight: 700;\r\n}\r\n\r\n</style>\r\n"],"mappings":";AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB;MACA,IAAI,CAACJ,YAAW,GAAII,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACP,YAAY,EAAE;QACtBF,IAAI,CAAC;UACHU,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE,SAAS;UACfC,mBAAmB,EAAE;QACvB,CAAC,CAAC;QACF;MACF;MACA,IAAI,IAAI,CAACV,YAAY,CAACW,IAAG,KAAM,YAAW,IAAK,IAAI,CAACX,YAAY,CAACW,IAAG,KAAM,WAAU,IAAK,IAAI,CAACX,YAAY,CAACW,IAAG,KAAM,WAAW,EAAE;QAC/H;QACAb,IAAI,CAAC;UACHU,IAAI,EAAE,4BAA4B;UAClCC,IAAI,EAAE,OAAO;UACbC,mBAAmB,EAAE;QACvB,CAAC,CAAC;QACF;MACF;MAEA,MAAME,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACd,YAAY,CAAC;MAE1C,MAAMH,KAAK,CAAC;QACVkB,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,IAAI,CAACC,OAAM,GAAI,aAAa;QACjClB,IAAI,EAAEa;MACR,CAAC,EACAM,IAAI,CAAC,MAAM;QAAE;QACZ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;QACtCvB,IAAI,CAAC;UACHU,IAAI,EAAE,2BAA2B;UACjCC,IAAI,EAAE,SAAS;UACfC,mBAAmB,EAAE;QACvB,CAAC,CAAC;MACJ,CAAC,EACAY,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAClC,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC,CAAC;IACvC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}